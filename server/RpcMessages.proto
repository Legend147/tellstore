package tell.store.proto;

message SnapshotDescriptor {
    required uint64 version = 1;
    optional bytes data = 2;
    required bool cached = 3;
}

message RpcRequestBatch {
    repeated RpcRequest request = 1;
}

message RpcRequest {
    required uint64 messageId = 1;

    oneof Request {
        CreateTableRequest createTable = 10;
        GetTableIdRequest getTableId = 11;
        GetRequest get = 12;
        GetNewestRequest getNewest = 13;
        UpdateRequest update = 14;
        InsertRequest insert = 15;
        RemoveRequest remove = 16;
        RevertRequest revert = 17;
        CommitRequest commit = 18;
    }
}

message RpcResponseBatch {
    repeated RpcResponse response = 1;
}

message RpcResponse {
    enum Error {
        UNKNOWN_REQUEST = 0;
        INVALID_SNAPSHOT = 1;
    }

    required uint64 messageId = 1;
    optional Error error = 2;

    oneof Response {
        CreateTableResponse createTable = 10;
        GetTableIdResponse getTableId = 11;
        GetResponse get = 12;
        UpdateResponse update = 14;
        InsertResponse insert = 15;
        RemoveResponse remove = 16;
        RevertResponse revert = 17;
        CommitResponse commit = 18;
    }
}

message CreateTableRequest {
    required string name = 1;
    required bytes schema = 2;
}

message CreateTableResponse {
    optional uint64 tableId = 1;
}

message GetTableIdRequest {
    required string name = 1;
}

message GetTableIdResponse {
    optional uint64 tableId = 1;
}

message GetRequest {
    required uint64 tableId = 1;
    required uint64 key = 2;
    required SnapshotDescriptor snapshot = 3;
}

message GetNewestRequest {
    required uint64 tableId = 1;
    required uint64 key = 2;
}

message GetResponse {
    optional bytes data = 1;
    required bool isNewest = 2;
    optional uint64 version = 3;
}

message UpdateRequest {
    required uint64 tableId = 1;
    required uint64 key = 2;
    required bytes data = 3;
    required SnapshotDescriptor snapshot = 4;
}

message UpdateResponse {
    required bool succeeded = 1;
}

message InsertRequest {
    required uint64 tableId = 1;
    required uint64 key = 2;
    required bytes data = 3;
    required SnapshotDescriptor snapshot = 4;
    required bool succeeded = 5;
}

message InsertResponse {
    optional bool succeeded = 1;
}

message RemoveRequest {
    required uint64 tableId = 1;
    required uint64 key = 2;
    required SnapshotDescriptor snapshot = 3;
}

message RemoveResponse {
    required bool succeeded = 1;
}

message RevertRequest {
    required uint64 tableId = 1;
    required uint64 key = 2;
    required SnapshotDescriptor snapshot = 3;
}

message RevertResponse {
    required bool succeeded = 1;
}

message CommitRequest {
    required SnapshotDescriptor snapshot = 1;
}

message CommitResponse {
    required bool succeeded = 1;
}
